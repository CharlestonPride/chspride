/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Theme = "primary" | "secondary" | "success" | "info" | "warning" | "danger";

export type Icon = "crown" | "flag" | "grin-hearts" | "hand-holding-usd" | "hands-helping" | "heart" | "shopping-cart" | "smile" | "ticket" | "user-friends" | "envelope" | "map" | "martini-glass" | "champagne-glasses" | "star" | "handshake";

export type ExternalUrl = {
  _type: "externalUrl";
  label?: string;
  url?: string;
};

export type DropdownItem = {
  _type: "dropdownItem";
  label?: string;
  list?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "ourTeam";
  } | {
    _key: string;
  } & ExternalUrl>;
};

export type TwoColumnGalleryCard = {
  _type: "twoColumnGalleryCard";
  title?: string;
  subtitle?: string;
  theme?: "primary" | "secondary" | "success" | "info" | "warning" | "danger";
  icon?: "crown" | "flag" | "grin-hearts" | "hand-holding-usd" | "hands-helping" | "heart" | "shopping-cart" | "smile" | "ticket" | "user-friends" | "envelope" | "map" | "martini-glass" | "champagne-glasses" | "star" | "handshake";
  buttons?: Array<{
    _key: string;
  } & Button>;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
};

export type TwoColumnCard = {
  _type: "twoColumnCard";
  title?: string;
  subtitle?: string;
  theme?: "primary" | "secondary" | "success" | "info" | "warning" | "danger";
  icon?: "crown" | "flag" | "grin-hearts" | "hand-holding-usd" | "hands-helping" | "heart" | "shopping-cart" | "smile" | "ticket" | "user-friends" | "envelope" | "map" | "martini-glass" | "champagne-glasses" | "star" | "handshake";
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  buttons?: Array<{
    _key: string;
  } & Button>;
  primary?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  secondary?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
  focus?: boolean;
  shadow?: boolean;
  stack?: boolean;
};

export type TextBlock = {
  _type: "textBlock";
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
};

export type SponsorsCard = {
  _type: "sponsorsCard";
  title?: string;
  theme?: "primary" | "secondary" | "success" | "info" | "warning" | "danger";
  featured?: boolean;
  year?: number;
  event?: "" | "festival" | "parade";
};

export type SocialsCard = {
  _type: "socialsCard";
  title?: string;
  subtitle?: string;
};

export type ImageGalleryCard = {
  _type: "imageGalleryCard";
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
  theme?: "primary" | "secondary" | "success" | "info" | "warning" | "danger";
};

export type EmbeddedForm = {
  _type: "embeddedForm";
  title?: string;
  enabled?: boolean;
  disabledMessage?: string;
  url?: string;
  width?: string;
  height?: string;
};

export type Button = {
  _type: "button";
  label?: string;
  directions?: string;
  url?: string;
  reference?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
};

export type OurTeam = {
  _id: string;
  _type: "ourTeam";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  description?: string;
  theme?: Theme;
  header?: Header;
  members?: Array<{
    _key: string;
  } & Person>;
  volunteers?: Array<{
    _key: string;
  } & Person>;
  team?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  seo?: Seo;
};

export type Navigation = {
  _id: string;
  _type: "navigation";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  main?: Array<{
    _key: string;
  } & DropdownItem | {
    _key: string;
  } & ExternalUrl>;
  callToAction?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "page";
  }>;
  theme?: "primary" | "secondary" | "success" | "info" | "warning" | "danger";
};

export type Home = {
  _id: string;
  _type: "home";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  theme?: Theme;
  header?: Header;
  content?: Array<{
    _key: string;
  } & EmbeddedForm | {
    _key: string;
  } & TwoColumnCard | {
    _key: string;
  } & SocialsCard | {
    _key: string;
  } & ImageGalleryCard | {
    _key: string;
  } & TwoColumnGalleryCard | {
    _key: string;
  } & TextBlock | {
    _key: string;
  } & SponsorsCard>;
  seo?: Seo;
};

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  address?: string;
  email?: string;
};

export type Sponsorship = {
  _id: string;
  _type: "sponsorship";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sponsor?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sponsor";
  };
  year?: number;
  level?: 6 | 5 | 4 | 3 | 2 | 1;
  branding?: string;
  featured?: boolean;
};

export type Sponsor = {
  _id: string;
  _type: "sponsor";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  website?: string;
};

export type Person = {
  _type: "person";
  name?: string;
  title?: string;
  email?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    attribution?: string;
    _type: "image";
  };
  bio?: string;
  pronouns?: "he/him/his" | "she/her/hers" | "they/them/theirs" | "ze/hir/hi" | "per/per/pers" | "(name only)" | "(ask me)";
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  slug?: Slug;
  theme?: Theme;
  header?: Header;
  content?: Array<{
    _key: string;
  } & EmbeddedForm | {
    _key: string;
  } & TwoColumnCard | {
    _key: string;
  } & SocialsCard | {
    _key: string;
  } & ImageGalleryCard | {
    _key: string;
  } & TwoColumnGalleryCard | {
    _key: string;
  } & TextBlock | {
    _key: string;
  } & SponsorsCard>;
  visibility?: Visibility;
  seo?: Seo;
};

export type Seo = {
  _type: "seo";
  title?: string;
  keywords?: string;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Visibility = {
  _type: "visibility";
  displayFrom?: string;
  displayTo?: string;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Header = {
  _type: "header";
  style?: "block" | "oblique" | "wave";
  title?: string;
  subtitle?: string;
  theme?: "primary" | "secondary" | "success" | "info" | "warning" | "danger";
  buttons?: Array<{
    _key: string;
  } & Button>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  size?: string;
  position?: string;
};

export type MediaTag = {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | Theme | Icon | ExternalUrl | DropdownItem | TwoColumnGalleryCard | TwoColumnCard | TextBlock | SponsorsCard | SocialsCard | ImageGalleryCard | EmbeddedForm | Button | OurTeam | Navigation | Home | Footer | Sponsorship | Sponsor | Person | Page | Seo | Visibility | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Header | MediaTag | Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/queries.tsx
// Variable: slugsQuery
// Query: *[_type == "page" && defined(slug.current)][]{  _id,  'slug':slug.current}
export type SlugsQueryResult = Array<{
  _id: string;
  slug: string | null;
}>;
// Variable: pageBySlugQuery
// Query: *[_type == "page" && slug.current == $slug][0]
export type PageBySlugQueryResult = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  slug?: Slug;
  theme?: Theme;
  header?: Header;
  content?: Array<{
    _key: string;
  } & EmbeddedForm | {
    _key: string;
  } & ImageGalleryCard | {
    _key: string;
  } & SocialsCard | {
    _key: string;
  } & SponsorsCard | {
    _key: string;
  } & TextBlock | {
    _key: string;
  } & TwoColumnCard | {
    _key: string;
  } & TwoColumnGalleryCard>;
  visibility?: Visibility;
  seo?: Seo;
} | null;
// Variable: homeQuery
// Query: *[_type == "home"]{  ...,  header{    ...,    buttons[]{      label,      url,      reference->{slug{...}}    }    },  content[]{    ...,    buttons[]{      label,      url,      reference->{slug{...}}    }    }  }
export type HomeQueryResult = Array<{
  _id: string;
  _type: "home";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  theme?: Theme;
  header: {
    _type: "header";
    style?: "block" | "oblique" | "wave";
    title?: string;
    subtitle?: string;
    theme?: "danger" | "info" | "primary" | "secondary" | "success" | "warning";
    buttons: Array<{
      label: string | null;
      url: string | null;
      reference: {
        slug: {
          _type: "slug";
          current?: string;
          source?: string;
        } | null;
      } | null;
    }> | null;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    size?: string;
    position?: string;
  } | null;
  content: Array<{
    _key: string;
    _type: "embeddedForm";
    title?: string;
    enabled?: boolean;
    disabledMessage?: string;
    url?: string;
    width?: string;
    height?: string;
    buttons: null;
  } | {
    _key: string;
    _type: "imageGalleryCard";
    images?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
      _key: string;
    }>;
    theme?: "danger" | "info" | "primary" | "secondary" | "success" | "warning";
    buttons: null;
  } | {
    _key: string;
    _type: "socialsCard";
    title?: string;
    subtitle?: string;
    buttons: null;
  } | {
    _key: string;
    _type: "sponsorsCard";
    title?: string;
    theme?: "danger" | "info" | "primary" | "secondary" | "success" | "warning";
    featured?: boolean;
    year?: number;
    event?: "" | "festival" | "parade";
    buttons: null;
  } | {
    _key: string;
    _type: "textBlock";
    content?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
      _key: string;
    }>;
    buttons: null;
  } | {
    _key: string;
    _type: "twoColumnCard";
    title?: string;
    subtitle?: string;
    theme?: "danger" | "info" | "primary" | "secondary" | "success" | "warning";
    icon?: "champagne-glasses" | "crown" | "envelope" | "flag" | "grin-hearts" | "hand-holding-usd" | "hands-helping" | "handshake" | "heart" | "map" | "martini-glass" | "shopping-cart" | "smile" | "star" | "ticket" | "user-friends";
    content?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    buttons: Array<{
      label: string | null;
      url: string | null;
      reference: {
        slug: {
          _type: "slug";
          current?: string;
          source?: string;
        } | null;
      } | null;
    }> | null;
    primary?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    secondary?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
      _key: string;
    }>;
    focus?: boolean;
    shadow?: boolean;
    stack?: boolean;
  } | {
    _key: string;
    _type: "twoColumnGalleryCard";
    title?: string;
    subtitle?: string;
    theme?: "danger" | "info" | "primary" | "secondary" | "success" | "warning";
    icon?: "champagne-glasses" | "crown" | "envelope" | "flag" | "grin-hearts" | "hand-holding-usd" | "hands-helping" | "handshake" | "heart" | "map" | "martini-glass" | "shopping-cart" | "smile" | "star" | "ticket" | "user-friends";
    buttons: Array<{
      label: string | null;
      url: string | null;
      reference: {
        slug: {
          _type: "slug";
          current?: string;
          source?: string;
        } | null;
      } | null;
    }> | null;
    images?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
      _key: string;
    }>;
  }> | null;
  seo?: Seo;
}>;
// Variable: navigationQuery
// Query: *[_type == "navigation"][0]{  ...,  main[]{    _type,    _type=='dropdownItem' =>{      label,      list[]{        _type,        _type=='Page' => @-> {          'label': title,          'slug': slug.current        },        _type == 'externalUrl' => {          label,          url        }      }    }  },  callToAction[] -> {    title,    slug  }}
export type NavigationQueryResult = {
  _id: string;
  _type: "navigation";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  main: Array<{
    _type: "dropdownItem";
    label: string | null;
    list: Array<{
      _type: "externalUrl";
      label: string | null;
      url: string | null;
    } | {
      _type: "reference";
    }> | null;
  } | {
    _type: "externalUrl";
  }> | null;
  callToAction: Array<{
    title: string | null;
    slug: Slug | null;
  }> | null;
  theme?: "danger" | "info" | "primary" | "secondary" | "success" | "warning";
} | null;
// Variable: sponsorsQuery
// Query: *[_type == "sponsor"]{  name,  website,  "logo":logo.asset->{    altText,    description,    url,  }}
export type SponsorsQueryResult = Array<{
  name: string | null;
  website: string | null;
  logo: {
    altText: string | null;
    description: string | null;
    url: string | null;
  } | null;
}>;
// Variable: sponsorshipsQuery
// Query: *[_type == "sponsorship" && year==$year]{  featured,  level,  event,  sponsor->{  name,  website,  "logo":logo.asset->{    altText,    description,    url,  }}} | order(level desc)
export type SponsorshipsQueryResult = Array<{
  featured: boolean | null;
  level: 1 | 2 | 3 | 4 | 5 | 6 | null;
  event: null;
  sponsor: {
    name: string | null;
    website: string | null;
    logo: {
      altText: string | null;
      description: string | null;
      url: string | null;
    } | null;
  } | null;
}>;
// Variable: peopleQuery
// Query: *[_type == "person" ]{  name,  title,  bio,  email,  pronouns,  "image":image.asset->{    altText,    description,    url  }}
export type PeopleQueryResult = Array<never>;
// Variable: ourTeamQuery
// Query: *[_type == "ourTeam" ][0]{...}
export type OurTeamQueryResult = {
  _id: string;
  _type: "ourTeam";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  description?: string;
  theme?: Theme;
  header?: Header;
  members?: Array<{
    _key: string;
  } & Person>;
  volunteers?: Array<{
    _key: string;
  } & Person>;
  team?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  seo?: Seo;
} | null;
// Variable: footerQuery
// Query: *[_type == "footer"][0]
export type FooterQueryResult = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  address?: string;
  email?: string;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"page\" && defined(slug.current)][]{\n  _id,\n  'slug':slug.current\n}": SlugsQueryResult;
    "*[_type == \"page\" && slug.current == $slug][0]": PageBySlugQueryResult;
    "*[_type == \"home\"]{\n  ...,\n  header{\n    ...,\n    buttons[]{\n      label,\n      url,\n      reference->{slug{...}}\n    }\n    },\n  content[]{\n    ...,\n    buttons[]{\n      label,\n      url,\n      reference->{slug{...}}\n    }\n    }\n  }": HomeQueryResult;
    "*[_type == \"navigation\"][0]\n{\n  ...,\n  main[]{\n    _type,\n    _type=='dropdownItem' =>{\n      label,\n      list[]{\n        _type,\n        _type=='Page' => @-> {\n          'label': title,\n          'slug': slug.current\n        },\n        _type == 'externalUrl' => {\n          label,\n          url\n        }\n      }\n    }\n  },\n  callToAction[] -> {\n    title,\n    slug\n  }\n}\n": NavigationQueryResult;
    "\n*[_type == \"sponsor\"]{\n  name,\n  website,\n  \"logo\":logo.asset->{\n    altText,\n    description,\n    url,\n  }\n}": SponsorsQueryResult;
    "\n*[_type == \"sponsorship\" && year==$year]{\n  featured,\n  level,\n  event,\n  sponsor->{\n  name,\n  website,\n  \"logo\":logo.asset->{\n    altText,\n    description,\n    url,\n  }\n}\n} | order(level desc)": SponsorshipsQueryResult;
    "\n*[_type == \"person\" ]{\n  name,\n  title,\n  bio,\n  email,\n  pronouns,\n  \"image\":image.asset->{\n    altText,\n    description,\n    url\n  }\n}\n": PeopleQueryResult;
    "\n*[_type == \"ourTeam\" ][0]{\n...\n}": OurTeamQueryResult;
    "\n*[_type == \"footer\"][0]": FooterQueryResult;
  }
}
